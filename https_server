from sys import version as python_version
from cgi import parse_header, parse_multipart
import BaseHTTPServer
from urlparse import parse_qs
import urllib 
import SocketServer
import threading
import ssl
import json
HOST_NAME = '0.0.0.0' 
PORT_NUMBER = 8200


class Handler(BaseHTTPServer.BaseHTTPRequestHandler):
    def do_HEAD(self):
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()

    def do_GET(self):
        print self.path, self.command
        if 'get'in self.path or 'GET' in self.command:
            self.send_response(200)
            self.send_header("Content-type", "text/html")
            self.end_headers()
            self.wfile.write('On /get/')
            return
        self.wfile.write('On root')
        return    

    def do_POST(self):
        print self.path, self.command
        if 'POST' in self.command:
          self.do_HEAD()
          ctype, pdict = parse_header(self.headers['content-type'])
          if ctype == 'multipart/form-data':
            postvars = parse_mulipart(self.rfile, pdict)
          elif ctype ==  'application/x-www-form-urlencoded':
            len = int(self.headers['content-length'])
            postvars = parse_qs(self.rfile.read(len), keep_blank_values=1)
          else:
            pstvars = {}
          print type(postvars), json.loads(type(postvars['data'][0]))
          return postvars
      
class ThreadedHTTPServer(SocketServer.ThreadingMixIn, BaseHTTPServer.HTTPServer):
    pass


if __name__ == '__main__':
    httpd = BaseHTTPServer.HTTPServer((HOST_NAME, PORT_NUMBER), Handler)
    httpd.socket = ssl.wrap_socket (httpd.socket, keyfile='key.pem', certfile='cert.pem', server_side=True)
    try:
        print "Server Start - %s:%s" % (HOST_NAME, PORT_NUMBER)
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.server_close()
    print "Server Stopped - %s:%s" % (HOST_NAME, PORT_NUMBER)
